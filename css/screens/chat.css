#chat-screen {
  background-color: #abc1d1;
  height: 150vh;
}

#chat-screen .alt-header {
  position: fixed;
  width: 100%;
  box-sizing: border-box;
  top: 10px;
  z-index: 1;
}

#chat-screen .alt-header,
#chat-screen .status-bar {
  background-color: #abc1d1;
}
#chat-screen .status-bar {
  z-index: 2;
}

@keyframes fadeIn {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    opacity: 1;
    transform: none;
  }
}

.main-chat {
  margin-top: 135px;
  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.8s linear;
}

.chat__timestamp {
  color: white;
  background-color: rgba(0, 0, 0, 0.2);
  padding: 15px;
  border-radius: 40px;
  margin-bottom: 25px;
  font-size: 14px;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
}
.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-right: 15px;
}

.message__author {
  opacity: 0.7;
  font-size: 13px;
  display: block;
  margin-bottom: 5px;
}

/* the container of message bubble and message time is going to have a display flex. */
.message__info {
  display: flex;
  align-items: flex-end;
}

.message__bubble {
  background-color: white;
  padding: 12px;
  border-radius: 15px;
  border-top-left-radius: 0px;
  margin-right: 5px;
  font-size: 18px;
}
.message__time {
  opacity: 0.7;
  font-size: 13px;
}

.message-row--own {
  justify-content: flex-end;
}

.message-row--own .message__bubble {
  background-color: var(--yellow);
  border-top-left-radius: 15px;
  border-top-right-radius: 0px;
  /* order: 1; */
}

/* message__info는 flex container이다. 자식 엘리멘트들은 order라는 flex property를 사용할 수 있다.
This order property works on flex-childern 
 .message-row--own .message__time {
  order: 0;
} */

.message-row--own .message__info {
  flex-direction: row-reverse;
}

.message-row--own .message__bubble {
  margin-right: 0;
  margin-left: 5px;
}

/* 메세지 창 만들기 */
.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 5px 25px;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
}

.reply i {
  opacity: 0.5;
}
.reply .reply__column:first-child {
  width: 10%;
}
/* column에 width을 주어야 input에 width을 줄 수 있다 */
.reply .reply__column:last-child {
  width: 90%;
  position: relative;
  padding: 0 13px;
}
.reply input {
  padding: 15px;
  width: 100%;
  border: var(--grey-border);
  border-radius: 20px;
  transition: all 0.3s ease-in-out;
}

.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: -3px;
  top: 9px;
}

.reply__column:last-child i {
  right: 40px;
  top: 15px;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 30px;
  height: 30px;
  border-radius: 50%;
}
.reply__column button i {
  opacity: 1;
}
.reply__column button:focus,
.reply__column button:active {
  outline: none;
}
/* if an element focused inside of reply,  */

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
  transition: opacity 0.3s ease-in;
}

.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
  opacity: 0;
  visibility: hidden;
}

.reply:focus-within input {
  width: 98vw;
  transform: translateX(-12%) translateY(-80px);
}

.reply:focus-within {
  transform: translateY(80px);
}
